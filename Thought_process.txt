I have experience with NLP and GANs so I though going for the first assignment of "caption generation from a given image".

In the given time limit it would be impossible to train a complete model which with good accuracy for the given task.

So I went to Hugging Face to hunt for a model. There was one model with very bad dependencies.

I rejected that and went for the gpt2 image captioning model.

It's accuracy is not super high but the computation time was amazing(it used pytorch rather then tensorflow which was also a good sign).

The trade off seemed okay, so I went for the model.

At first the model was generating only one caption, So I though of modifying the code so that it gives the result with top 5 scores as an output. Thus they can act as captions, but the captions with lower scores were horrible.

So I scraped the idea and went for ChatGPT.

I thought of using the first caption as my base statement and generating captions based on that. But the time period of the caption generation was quite high.

Also I was getting null outputs sometimes.

Thus I also scraped the idea.

Then I though of using chatGPT competitor Bard.

I found a workaround of using Bard as an API.

The response time was quite good and the prompts were okay. Not as catchy as chatGPT but workable.

Then I modified the prompt to generate the captions in a standardized manner and with simple list comprehension, got rid of the extra lines which are not needed.

At last I created a input-output interface using gradio.

There were also other option for interface such as PyQt and Tinker. But the interface of those packages looked kind of old and PyQt also has a lot of problems working on windows.

Thus I went with gradio, and in the future it could be easily containerized which makes it very easy to deploy and monitor in the real world